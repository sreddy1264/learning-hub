// src/arrayManipulations.ts
function SumOfNumber(num1, num2) {
  return num1 + num2;
}
function isEvenNumber(num) {
  return num % 2 === 0;
}
function getEvenNumbers(NumList) {
  return NumList.filter((num) => num % 2 === 0);
}
function reverseString(str) {
  return str.split("").reverse().join("");
}
function isPolindrome(str) {
  const regEx = /[A-Za-z0-9]/g;
  const lowerCaseConversion = str.toLowerCase().replace(regEx, "");
  const reverseString2 = str.split("").reverse().join("");
  return lowerCaseConversion === reverseString2;
}
function MaxNumber(numList) {
  return Math.max(...numList);
}
function factorial(num) {
  if (num === 0 || num === 1) {
    return 1;
  } else {
    return num * factorial(num - 1);
  }
}
function isPrimaryNumber(num) {
  if (num <= 1)
    return false;
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0)
      return false;
  }
  return true;
}
export {
  MaxNumber,
  SumOfNumber,
  factorial,
  getEvenNumbers,
  isEvenNumber,
  isPolindrome,
  isPrimaryNumber,
  reverseString
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2FycmF5TWFuaXB1bGF0aW9ucy50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gVG8gYWRkIHR3byBudW1iZXJzXG5mdW5jdGlvbiBTdW1PZk51bWJlcihudW0xOiBudW1iZXIsIG51bTI6IG51bWJlcik6IG51bWJlciB7XG4gICAgcmV0dXJuIG51bTEgKyBudW0yO1xufTtcblxuLy8gVG8gZmluZCBldmVuIG51bWJlclxuZnVuY3Rpb24gaXNFdmVuTnVtYmVyKG51bTogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIG51bSAlIDIgPT09IDA7ICAgXG59O1xuXG4vLyBUbyBmaW5kIGV2ZW4gbnVtYmVycyBmcm9tIGFuIGFycmF5XG5mdW5jdGlvbiBnZXRFdmVuTnVtYmVycyhOdW1MaXN0OiBBcnJheTxudW1iZXI+KTogQXJyYXk8bnVtYmVyPiB7XG4gICAgcmV0dXJuIE51bUxpc3QuZmlsdGVyKChudW06IG51bWJlcikgPT4gbnVtICUgMiA9PT0gMCkgXG59O1xuXG4vLyBUbyByZXZlcnNlIGEgc3RyaW5nXG5mdW5jdGlvbiByZXZlcnNlU3RyaW5nKHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gc3RyLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpO1xuXG59O1xuXG4vLyBUbyBmaW5kIGlmIGEgc3RyaW5nIGlzIHBhbGluZHJvbWVcbmZ1bmN0aW9uIGlzUG9saW5kcm9tZSAoc3RyOiBzdHJpbmcpIHtcbiAgICBjb25zdCByZWdFeCA9IC9bQS1aYS16MC05XS9nO1xuICAgIGNvbnN0IGxvd2VyQ2FzZUNvbnZlcnNpb24gPSBzdHIudG9Mb3dlckNhc2UoKS5yZXBsYWNlKHJlZ0V4LCBcIlwiKTtcbiAgICBjb25zdCByZXZlcnNlU3RyaW5nID0gc3RyLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpO1xuICBcbiAgICByZXR1cm4gbG93ZXJDYXNlQ29udmVyc2lvbiA9PT0gcmV2ZXJzZVN0cmluZztcbn07XG5cbi8vIGZpbmQgbWF4IG51bWJlclxuZnVuY3Rpb24gTWF4TnVtYmVyIChudW1MaXN0OiBBcnJheTxudW1iZXI+KSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KC4uLm51bUxpc3QpO1xufTtcblxuLy8gRmFjdG9yaWFsIG9mIGEgZ2l2ZW4gbnVtYmVyXG5mdW5jdGlvbiBmYWN0b3JpYWwgKG51bTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBpZiAobnVtID09PSAwIHx8IG51bSA9PT0gMSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVtICogZmFjdG9yaWFsKG51bSAtIDEpO1xuICAgIH1cbn07XG4vLyBDaGVjayBpZiBhIGdpdmVuIG51bWJlciBpcyBhIHByaW1lIG51bWJlclxuZnVuY3Rpb24gaXNQcmltYXJ5TnVtYmVyIChudW06IG51bWJlcikge1xuICBpZiAobnVtIDw9IDEpIHJldHVybiBmYWxzZTtcbiAgZm9yIChsZXQgaSA9IDI7IGkgPD0gTWF0aC5zcXJ0KG51bSk7IGkrKykge1xuICAgICAgaWYgKG51bSAlIGkgPT09IDApIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8vIHJldHVybiBGaWJvbmFjY2kgc2VxdWVuY2UgdXAgdG8gYSBnaXZlbiBudW1iZXIgb2YgdGVybVxuLy8gZnVuY3Rpb24gZmlib25hY2NpU2VxdWVuY2UobnVtVGVybTogbnVtYmVyKSB7XG4vLyAgICAgaWYgKG51bVRlcm0gPD0gMCkgcmV0dXJuIFtdO1xuLy8gICAgIGlmIChudW1UZXJtID09PSAxKSByZXR1cm4gWzBdO1xuLy8gICAgIGxldCBzZXF1ZW5jZSA9IFswLDFdO1xuLy8gICAgIHdoaWxlKHNlcXVlbmNlLmxlbmd0aCA8IG51bVRlcm0pIHtcbi8vICAgICAgIGxldCBuZXh0TnVtYmVyID0gc2VxdWVuY2Vbc2VxdWVuY2UubGVuZ3RoIC0gMV0gKyBzZXF1ZW5jZVtzZXF1ZW5jZS5sZW5ndGggLSAyXTtcbi8vICAgICAgIHNlcXVlbmNlLnB1c2gobmV4dE51bWJlcik7XG4vLyAgICAgfVxuLy8gICAgIHJldHVybiBzZXF1ZW5jZTtcbi8vIH07XG5cblxuXG5leHBvcnQge1xuICAgIFN1bU9mTnVtYmVyLFxuICAgIGlzRXZlbk51bWJlcixcbiAgICBnZXRFdmVuTnVtYmVycyxcbiAgICByZXZlcnNlU3RyaW5nLFxuICAgIGlzUG9saW5kcm9tZSxcbiAgICBmYWN0b3JpYWwsXG4gICAgTWF4TnVtYmVyLFxuICAgIGlzUHJpbWFyeU51bWJlcixcbn07Il0sCiAgIm1hcHBpbmdzIjogIjtBQUNBLFNBQVMsWUFBWSxNQUFjLE1BQXNCO0FBQ3JELFNBQU8sT0FBTztBQUNsQjtBQUdBLFNBQVMsYUFBYSxLQUFzQjtBQUN4QyxTQUFPLE1BQU0sTUFBTTtBQUN2QjtBQUdBLFNBQVMsZUFBZSxTQUF1QztBQUMzRCxTQUFPLFFBQVEsT0FBTyxDQUFDLFFBQWdCLE1BQU0sTUFBTSxDQUFDO0FBQ3hEO0FBR0EsU0FBUyxjQUFjLEtBQXFCO0FBQ3hDLFNBQU8sSUFBSSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFO0FBRTFDO0FBR0EsU0FBUyxhQUFjLEtBQWE7QUFDaEMsUUFBTSxRQUFRO0FBQ2QsUUFBTSxzQkFBc0IsSUFBSSxZQUFZLEVBQUUsUUFBUSxPQUFPLEVBQUU7QUFDL0QsUUFBTUEsaUJBQWdCLElBQUksTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRTtBQUVyRCxTQUFPLHdCQUF3QkE7QUFDbkM7QUFHQSxTQUFTLFVBQVcsU0FBd0I7QUFDeEMsU0FBTyxLQUFLLElBQUksR0FBRyxPQUFPO0FBQzlCO0FBR0EsU0FBUyxVQUFXLEtBQXFCO0FBQ3JDLE1BQUksUUFBUSxLQUFLLFFBQVEsR0FBRztBQUN4QixXQUFPO0FBQUEsRUFDWCxPQUFPO0FBQ0gsV0FBTyxNQUFNLFVBQVUsTUFBTSxDQUFDO0FBQUEsRUFDbEM7QUFDSjtBQUVBLFNBQVMsZ0JBQWlCLEtBQWE7QUFDckMsTUFBSSxPQUFPO0FBQUcsV0FBTztBQUNyQixXQUFTLElBQUksR0FBRyxLQUFLLEtBQUssS0FBSyxHQUFHLEdBQUcsS0FBSztBQUN0QyxRQUFJLE1BQU0sTUFBTTtBQUFHLGFBQU87QUFBQSxFQUM5QjtBQUNBLFNBQU87QUFDVDsiLAogICJuYW1lcyI6IFsicmV2ZXJzZVN0cmluZyJdCn0K